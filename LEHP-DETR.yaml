# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  - [ -1, 1, Conv, [ 64, 3, 2 ] ]  # 0-P1/2
  - [ -1, 1, Conv, [ 128, 3, 2 ] ]  # 1-P2/4
  - [ -1, 1, RepNCSPELAN4, [ 128, 64, 32, 1 ] ]  # 2-P2/4

  # avg-conv down
  - [ -1, 1, ADown, [ 128 ] ]  # 3-P3/8

  # elan-2 block
  - [ -1, 1, RepNCSPELAN4, [ 128, 64, 32, 1 ] ]  # 4-P3/8

  # avg-conv down
  - [ -1, 1, ADown, [ 256 ] ]  # 5-P4/16

  # elan-2 block
  - [ -1, 1, RepNCSPELAN4, [ 256, 128, 64, 1 ] ]  # 6-P4/16

  # avg-conv down
  - [ -1, 1, HWD_ADown, [ 512 ] ]  # 7-P5/32

  # elan-2 block
  - [ -1, 1, RepNCSPELAN4, [ 512, 256, 128, 1 ] ]  # 8-P5/32

  - [ -1, 1, ContextAggregation, [ 512 ] ]  # 9

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 10 input_proj.2
  - [-1, 1, HiLo-AIFI, [1024]] # 11
  - [-1, 1, Conv, [256, 1, 1]]  # 12, Y5, lateral_convs.0

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 13
  - [4, 1, Conv, [128, 1, 1, None, 1, 1, False]]  # 14 input_proj.1
  - [[-1, 6, -2], 1, TFE, []] # 15
  - [-1, 3, RepC3, [128, 0.5]]  # 16, fpn_blocks.0
  - [-1, 1, Conv, [128, 1, 1]]   # 17, Y4, lateral_convs.1

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 18
  - [2, 1, Conv, [128, 1, 1, None, 1, 1, False]]  # 19 input_proj.0
  - [[-1, 4, -2], 1, TFE, []]  # 20 cat backbone P4
  - [-1, 3, RepC3, [128, 0.5]]    # X3 (21), fpn_blocks.1

  - [-1, 1, Conv, [128, 3, 2]]   # 22, downsample_convs.0
  - [[-1, 17], 1, Concat, [1]]  # 23 cat Y4
  - [-1, 3, RepC3, [128, 0.5]]    # F4 (24), pan_blocks.0

  - [-1, 1, Conv, [128, 3, 2]]   # 25, downsample_convs.1
  - [[-1, 12], 1, Concat, [1]]  # 26 cat Y5
  - [-1, 3, RepC3, [128, 0.5]]    # F5 (27), pan_blocks.1

  - [[4, 6, 10], 1, DSSFF, [128]] # 28
  - [[21, -1], 1, Add, []] # 29

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']] # 30
  - [1, 1, Conv, [128, 1, 1, None, 1, 1, False]]  # 31
  - [[-1, -2], 1, Concat, [1]] # 32
  - [-1, 3, RepC3, [128, 0.5]]  # 33

  - [[2, 29, 24], 1, DSSFF, [128]] # 34
  - [[33, -1], 1, Add, []] # 35

  - [[35, 29, 24, 27], 1, RTDETRDecoder, [nc, 128, 300, 4, 8, 3]]  # Detect(P2, P3, P4, P5)
